varNames <- varNames[!varNames %in% c("y")]
print(varNames)
varNames[-13]
varNames=varNames[-13]
varNames
varNames1 <- paste(varNames, collapse = "+")
print(varNames1)
RF_formula <- as.formula(paste("y", varNames1, sep = " ~ "))
print(RF_formula)
model <- randomForest(RF_formula, wine_train, ntree=500, importance=T)
varNames <- names(wine_train)
varNames <- varNames[!varNames %in% c("y")]
print(varNames)
varNames1 <- paste(varNames, collapse = "+")
print(varNames1)
RF_formula <- as.formula(paste("target", varNames1, sep = " ~ "))
print(RF_formula)
model <- randomForest(RF_formula, wine_train, ntree=500, importance=T)
varNames <- names(wine_train)
varNames <- varNames[!varNames %in% c("y")]
print(varNames)
varNames <- names(wine_train)
varNames <- varNames[!varNames %in% c("target")]
print(varNames)
varNames1 <- paste(varNames, collapse = "+")
print(varNames1)
RF_formula <- as.formula(paste("target", varNames1, sep = " ~ "))
print(RF_formula)
model <- randomForest(RF_formula, wine_train, ntree=500, importance=T)
set.seed(42)
samp <- sample(4898,3500)
wine_train <- wine[samp,]
wine_test <- wine[-samp,]
prop.table(table(wine_test$target))
prop.table(table(wine_train$target))
varNames <- names(wine_train)
model <- randomForest(target~. - quality, wine_train, ntree=500, importance=T)
model <- randomForest(formula=target~. - quality, wine_train, ntree=500, importance=T)
model <- randomForest(formula=target~.-quality, wine_train, ntree=500, importance=T)
View(a)
w = read.csv(file.choose(), sep sep = ';')
w = read.csv(file.choose(), sep = ';')
View(w)
a = read.csv(file.choose(), sep = ',')
View(a)
summary(a)
summary(a)
summary(table(a))
?a
??a
help(a)
desc(a)
plot(a)
plot(a$Count, type = "l")
plot.ts(a)
View(a)
a = read.csv(file.choose(), sep = ',')
summary(a)
plot(a)
a[-ID]
a[-1]
a
plot(a)
str(a)
a = a[-1]
str(a)
class(a)
a = as.ts(a)
class(a)
str(a)
a
#install.packages("tseries")
library('tseries')
data = read.csv(file.choose())
head(data)
attach(data)
head(data)
summary(data$Count)
summary(data$Count)
train_data = read.csv(file = "C:/Users/Shri/Desktop/mera-time-series/Train_SU63ISt.csv")
attach(train_data)
head(data)
summary(data$Count)
head(train_data)
summary(train_data$Count)
plot(train_data$Count)
adf.test(train_data$Count, alternative = "stationary")
acf(train_data$Count)
pacf(train_data$Count)
acf(train_data$Count)
acf(train_data$Count)
pacf(train_data$Count)
d.count <- diff(train_data$Count)
plot(d.count)
adf.test(d.count, alternative = "stationary")
acf(d.count)
pacf(d.count)
acf(d.count)
d.count <- diff(d.count)
plot(d.count)
adf.test(d.count, alternative = "stationary", )
acf(d.count)
pacf(d.count)
d.count <- diff(d.count)
plot(d.count)
adf.test(d.count, alternative = "stationary", )
acf(d.count)
pacf(d.count)
d.count <- diff(d.count)
plot(d.count)
plot(d.count)
adf.test(d.count, alternative = "stationary", )
plot(d.count)
adf.test(d.count, alternative = "stationary", )
acf(d.count)
pacf(d.count)
acf(d.count)
pacf(d.count)
library('tseries')
train_data = read.csv(file = "C:/Users/Shri/Desktop/mera-time-series/Train_SU63ISt.csv")
attach(train_data)
head(train_data)
#install.packages("tseries")
library('tseries')
train_data = read.csv(file = "C:/Users/Shri/Desktop/mera-time-series/Train_SU63ISt.csv")
attach(train_data)
head(train_data)
summary(train_data$Count)
plot(train_data$Count)
adf.test(train_data$Count, alternative = "stationary")
acf(train_data$Count)
pacf(train_data$Count)
d.count <- diff(d.count)
plot(d.count)
adf.test(d.count, alternative = "stationary", )
acf(d.count)
pacf(d.count)
arima(d.count, order = c(1, 0, 0))
arima(d.count, order = c(2, 0, 0))
arima(d.count, order = c(1, 0, 1))
arima(d.count, order = c(1, 0, 2))
arima(d.count, order = c(1, 0, 3))
arima(d.count, order = c(2, 0, 3))
arima(d.count, order = c(1, 0, 3))
arima(d.count, order = c(1, 1, 3))
arima(d.count, order = c(1, 0, 3))
arima(d.count, order = c(1, 0, 4))
final_model <- arima(train_data, c(1, 1, 3))
final_model <- arima(train_data$Count, c(1, 1, 3))
tsdiag(final_model)
predictions = read.csv(file = "C:/Users/Shri/Desktop/mera-time-series/Test_0qrQsBZ.csv")
dim(predictions)
predictions$Count <- predict(final_model, n.ahead = 5112)
predictions
head(predictions)
View(predictions)
test_data = read.csv(file = "C:/Users/Shri/Desktop/mera-time-series/Test_0qrQsBZ.csv")
dim(test_data)
predictions <- predict(final_model, n.ahead = 5112)
head(predictions)
tsdiag(final_model)
final_model <- arima(train_data$Count, c(1, 1, 5))
tsdiag(final_model)
test_data = read.csv(file = "C:/Users/Shri/Desktop/mera-time-series/Test_0qrQsBZ.csv")
dim(test_data)
predictions <- predict(final_model, n.ahead = 5112)
head(predictions)
install.packages('devtools')
MB)
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
q()
data <- read.csv(data = "C:/Users/Shri/Desktop/for_git/mera-time-series/Time-Series-Analysis/Train_SU63ISt.csv")
data <- read.csv(data = "C:/Users/Shri/Desktop/for_git/mera-time-series/Time-Series-Analysis/Train_SU63ISt.csv")
data <- read.csv(data = "C:/Users/Shri/Desktop/for_git/mera-time-series/Time-Series-Analysis/Train_SU63ISt.csv")
View(a)
data
print(data)
data <- read.csv("C:/Users/Shri/Desktop/for_git/mera-time-series/Time-Series-Analysis/Train_SU63ISt.csv")
View(data)
data <- data(c('Datetime', 'Count'))
data
data <- read.csv("C:/Users/Shri/Desktop/for_git/mera-time-series/Time-Series-Analysis/Train_SU63ISt.csv")
id <- data$Datetime
count <- data$Count
data <- as.data.frame(c(id, count))
data
View(data)
data <- read.csv("C:/Users/Shri/Desktop/for_git/mera-time-series/Time-Series-Analysis/Train_SU63ISt.csv")
id <- data$Datetime
count <- data$Count
data <- as.data.frame(id, count)
data
ts <- as.array(as.ts(data))
ts
data <- read.csv("C:/Users/Shri/Desktop/for_git/mera-time-series/Time-Series-Analysis/Train_SU63ISt.csv")
ts <- as.ts(data)
ts
View(ts)
summary(data$Count)
time <- as.ts(data = data)
time <- as.ts(x =  data)
View(time)
data <- read.csv("C:/Users/Shri/Desktop/for_git/mera-time-series/Time-Series-Analysis/Train_SU63ISt.csv")
data$Datetime <- as.ts(data$Datetime)
View(data)
data <- read.csv("C:/Users/Shri/Desktop/for_git/mera-time-series/Time-Series-Analysis/Train_SU63ISt.csv")
data(:)
data(:1)
data[:1]
data1 <- read.csv("C:/Users/Shri/Desktop/for_git/mera-time-series/Time-Series-Analysis/Train_SU63ISt.csv")
str(data1)
data1[data$ID]
dates
data(dates)
data1 <- subset(data1, select = c(Datetime, count
))
data1 <- subset(data1, select = c(data1$Datetime, data1$count))
data1 <- read.csv("C:/Users/Shri/Desktop/for_git/mera-time-series/Time-Series-Analysis/Train_SU63ISt.csv")
data1 <- subset(data1, select = c(data1$Datetime, data1$count))
data1 <- subset(data1, select = c(data1$Datetime, data1$Count))
data1 <- subset(data1, select = c(Datetime, Count))
data1
dlog <- log(data1$Count)
plot(dlog)
library("ggplot2")
qplot(dlog)
data1 <- read.csv("C:/Users/Shri/Desktop/for_git/mera-time-series/Time-Series-Analysis/Train_SU63ISt.csv")
dlog <- log(data1$Count)
qplot(x = dlog, y = data1$ID)
qplot(x = data1$ID, y = dlog)
ts <- as.ts(data1$Datetime)
dlog <- log(data1$Count)
ts
typeof(ts)
str(ts)
new <- as.data.frame(c(ts, dlog))
new
View(new)
new <- as.data.frame(x = c(ts, dlog))
new
View(new)
plot(dlog, type = 'b')
plot(dlog, type = 'l')
plot(data1$Count, type = 'l')
library("prophet")
new
View(new)
View(data)
data1 <- read.csv("C:/Users/Shri/Desktop/for_git/mera-time-series/Time-Series-Analysis/Train_SU63ISt.csv")
library("prophet")
data_clean <- data.frame(c(data1$Datetime, data1$Count))
data_clean
View(data_clean)
data_clean <- data.frame(data1$Datetime, data1$Count)
data_clean
View(data_clean)
library("prophet")
library('ggplot2')
qplot(data_clean$data1.Count)
qplot(data_clean$data1.Count, data_clean$data1.Datetime)
data1 <- read.csv("C:/Users/Shri/Desktop/for_git/mera-time-series/Time-Series-Analysis/Train_SU63ISt.csv")
library("prophet")
data_clean <- data.frame(data1$Datetime, data1$Count)
library("prophet")
library('ggplot2')
View(data_clean)
data_clean <- data.frame(data1$Datetime, data1$Count, `colnames<-c('Datetime', 'Count'))
;
)
data_clean <- data.frame(data1$Datetime, data1$Count, `colnames<-c('Datetime', 'Count'))
library("prophet")
library('ggplot2')
qplot(data_clean$, data_clean$data1.Datetime)
qplot(data_clean$data1.Count)
qplot(data_clean$data1.Datetime, data_clean$data1.Count, data = data_clean)
qplot(data_clean$data1.Count, data = data_clean)
plot(log10(data_clean$data1.Count))
plot(log(data_clean$data1.Count))
plot.ts(data_clean)
plot.ts(data_clean$data1.Count)
plot.ts(log(data_clean$data1.Count))
plot.ts(diff(log(data_clean$data1.Count)))
sam <- sample(x=data_clean, size = 0.68)
sam
View(sam)
plot(sample(data_clean$data1.Count, size = 0.68))
sam <- sample(data_clean$data1.Count, size = 0.68)
lm(data_clean)
mod <- lm(data = data_clean)
plot(mod)
plot(mod$qr)
plot(mod$coefficients)
a <- read.csv("C:/Users/Shri/Downloads/train.csv")
str(a)
summary(a)
plot(a$Product_Category_1)
summary(a)
View(a)
#setwd("C:/Users/Shri/Desktop/for_git/black-friday/")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
summary(train)
str(train)
# Column - Product_ID
train$Product_ID <- as.numeric(train$Product_ID)
# Column - Age
typeof(train$Age)
table(train$Age, useNA = "ifany")
train$Age <- as.numeric(train$Age)
# Column - Gender
table(train$Gender)
typeof(train$Gender)
train$Gender <- as.numeric(train$Gender)
# Column - City_Category
table(train$City_Category)
typeof(train$City_Category)
train$City_Category <- as.numeric(train$City_Category)
# Column - Stay_In_Current_City_Years
table(train$Stay_In_Current_City_Years)
typeof(train$Stay_In_Current_City_Years)
train$Stay_In_Current_City_Years <- as.numeric(train$Stay_In_Current_City_Years)
# Column - Product_Category_1, Product_Category_2, Product_Category_3
table(train$Product_Category_1, useNA = "ifany")
table(train$Product_Category_2, useNA = "ifany")
table(train$Product_Category_3, useNA = "ifany")
train$Product_Category_2[is.na(train$Product_Category_2)] <- 0
train$Product_Category_2 <- factor(train$Product_Category_2)
train$Product_Category_3[is.na(train$Product_Category_3)] <- 0
train$Product_Category_3 <- factor(train$Product_Category_3)
summary(train)
str(train)
write.csv(train, file = "train_for_model.csv")
setwd("C:/Users/Shri/Desktop/for_git/black-friday")
#setwd("C:/Users/Shri/Desktop/for_git/black-friday/")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
summary(train)
str(train)
# Column - Product_ID
train$Product_ID <- as.numeric(train$Product_ID)
# Column - Age
typeof(train$Age)
table(train$Age, useNA = "ifany")
train$Age <- as.numeric(train$Age)
# Column - Gender
table(train$Gender)
typeof(train$Gender)
train$Gender <- as.numeric(train$Gender)
# Column - City_Category
table(train$City_Category)
typeof(train$City_Category)
train$City_Category <- as.numeric(train$City_Category)
# Column - Stay_In_Current_City_Years
table(train$Stay_In_Current_City_Years)
typeof(train$Stay_In_Current_City_Years)
train$Stay_In_Current_City_Years <- as.numeric(train$Stay_In_Current_City_Years)
# Column - Product_Category_1, Product_Category_2, Product_Category_3
table(train$Product_Category_1, useNA = "ifany")
table(train$Product_Category_2, useNA = "ifany")
table(train$Product_Category_3, useNA = "ifany")
train$Product_Category_2[is.na(train$Product_Category_2)] <- 0
train$Product_Category_2 <- factor(train$Product_Category_2)
train$Product_Category_3[is.na(train$Product_Category_3)] <- 0
train$Product_Category_3 <- factor(train$Product_Category_3)
summary(train)
str(train)
write.csv(train, file = "train_for_model.csv")
library("rpart")
set.seed(12)
shape <- dim(train)
# Split the training data into train and test
# First we will test the accuracy of model on the data where we have labels and find RMSE
train_sample <- sample(shape[1], 545000)
train_data <- train[train_sample,]
test_data <- train[-train_sample,]
test_label <- test_data$Purchase
test_data <- test_data[-test_data$Purchase]
model <- rpart(Purchase ~ ., data = train_data)
predict <- predict(model, test_data)
error <- test_label - predict
RMSE <- sum(error)^2 / length(test_label)
print(sqrt(RMSE))
final_res <- data.frame(cbind(test_label, predict, error))
View(final_res)
function(a){
a$Product_ID <- as.numeric(a$Product_ID)
# Column - Age
a$Age <- as.numeric(a$Age)
# Column - Gender
a$Gender <- as.numeric(a$Gender)
# Column - City_Category
a$City_Category <- as.numeric(a$City_Category)
# Column - Stay_In_Current_City_Years
a$Stay_In_Current_City_Years <- as.numeric(a$Stay_In_Current_City_Years)
# Column - Product_Category_1, Product_Category_2, Product_Category_3
a$Product_Category_2[is.na(a$Product_Category_2)] <- 0
a$Product_Category_2 <- factor(a$Product_Category_2)
a$Product_Category_3[is.na(a$Product_Category_3)] <- 0
a$Product_Category_3 <- factor(a$Product_Category_3)
write.csv(a, file = "train_for_model.csv")
}
data_prep <- function(a){
a$Product_ID <- as.numeric(a$Product_ID)
# Column - Age
a$Age <- as.numeric(a$Age)
# Column - Gender
a$Gender <- as.numeric(a$Gender)
# Column - City_Category
a$City_Category <- as.numeric(a$City_Category)
# Column - Stay_In_Current_City_Years
a$Stay_In_Current_City_Years <- as.numeric(a$Stay_In_Current_City_Years)
# Column - Product_Category_1, Product_Category_2, Product_Category_3
a$Product_Category_2[is.na(a$Product_Category_2)] <- 0
a$Product_Category_2 <- factor(a$Product_Category_2)
a$Product_Category_3[is.na(a$Product_Category_3)] <- 0
a$Product_Category_3 <- factor(a$Product_Category_3)
write.csv(a, file = "train_for_model.csv")
}
setwd("C:/Users/Shri/Desktop/for_git/black-friday")
a <- read.csv("train.csv")
data_prep(a)
data_prep <- function(a,b){
a$Product_ID <- as.numeric(a$Product_ID)
b$Product_ID <- as.numeric(b$Product_ID)
# Column - Age
a$Age <- as.numeric(a$Age)
b$Age <- as.numeric(b$Age)
# Column - Gender
a$Gender <- as.numeric(a$Gender)
b$Gender <- as.numeric(b$Gender)
# Column - City_Category
a$City_Category <- as.numeric(a$City_Category)
b$City_Category <- as.numeric(b$City_Category)
# Column - Stay_In_Current_City_Years
a$Stay_In_Current_City_Years <- as.numeric(a$Stay_In_Current_City_Years)
b$Stay_In_Current_City_Years <- as.numeric(b$Stay_In_Current_City_Years)
# Column - Product_Category_1, Product_Category_2, Product_Category_3
a$Product_Category_2[is.na(a$Product_Category_2)] <- 0
a$Product_Category_2 <- factor(a$Product_Category_2)
b$Product_Category_2[is.na(b$Product_Category_2)] <- 0
b$Product_Category_2 <- factor(b$Product_Category_2)
a$Product_Category_3[is.na(a$Product_Category_3)] <- 0
a$Product_Category_3 <- factor(a$Product_Category_3)
b$Product_Category_3[is.na(b$Product_Category_3)] <- 0
b$Product_Category_3 <- factor(b$Product_Category_3)
}
write.csv(a, file = "train_for_model.csv")
write.csv(b, file = "test_for_model.csv")
a <- read.csv("train.csv")
b <- read.csv("test.csv")
data_prep(a)
a <- read.csv("train.csv")
b <- read.csv("test.csv")
data_prep <- function(a,b){
a$Product_ID <- as.numeric(a$Product_ID)
b$Product_ID <- as.numeric(b$Product_ID)
# Column - Age
a$Age <- as.numeric(a$Age)
b$Age <- as.numeric(b$Age)
# Column - Gender
a$Gender <- as.numeric(a$Gender)
b$Gender <- as.numeric(b$Gender)
# Column - City_Category
a$City_Category <- as.numeric(a$City_Category)
b$City_Category <- as.numeric(b$City_Category)
# Column - Stay_In_Current_City_Years
a$Stay_In_Current_City_Years <- as.numeric(a$Stay_In_Current_City_Years)
b$Stay_In_Current_City_Years <- as.numeric(b$Stay_In_Current_City_Years)
# Column - Product_Category_1, Product_Category_2, Product_Category_3
a$Product_Category_2[is.na(a$Product_Category_2)] <- 0
a$Product_Category_2 <- factor(a$Product_Category_2)
b$Product_Category_2[is.na(b$Product_Category_2)] <- 0
b$Product_Category_2 <- factor(b$Product_Category_2)
a$Product_Category_3[is.na(a$Product_Category_3)] <- 0
a$Product_Category_3 <- factor(a$Product_Category_3)
b$Product_Category_3[is.na(b$Product_Category_3)] <- 0
b$Product_Category_3 <- factor(b$Product_Category_3)
}
write.csv(a, file = "train_for_model.csv")
write.csv(b, file = "test_for_model.csv")
data_prep(a,b)
a <- read.csv("train.csv")
b <- read.csv("test.csv")
data_prep <- function(a,b){
a$Product_ID <- as.numeric(a$Product_ID)
b$Product_ID <- as.numeric(b$Product_ID)
# Column - Age
a$Age <- as.numeric(a$Age)
b$Age <- as.numeric(b$Age)
# Column - Gender
a$Gender <- as.numeric(a$Gender)
b$Gender <- as.numeric(b$Gender)
# Column - City_Category
a$City_Category <- as.numeric(a$City_Category)
b$City_Category <- as.numeric(b$City_Category)
# Column - Stay_In_Current_City_Years
a$Stay_In_Current_City_Years <- as.numeric(a$Stay_In_Current_City_Years)
b$Stay_In_Current_City_Years <- as.numeric(b$Stay_In_Current_City_Years)
# Column - Product_Category_1, Product_Category_2, Product_Category_3
a$Product_Category_2[is.na(a$Product_Category_2)] <- 0
a$Product_Category_2 <- factor(a$Product_Category_2)
b$Product_Category_2[is.na(b$Product_Category_2)] <- 0
b$Product_Category_2 <- factor(b$Product_Category_2)
a$Product_Category_3[is.na(a$Product_Category_3)] <- 0
a$Product_Category_3 <- factor(a$Product_Category_3)
b$Product_Category_3[is.na(b$Product_Category_3)] <- 0
b$Product_Category_3 <- factor(b$Product_Category_3)
write.csv(a, file = "train_for_model.csv")
write.csv(b, file = "test_for_model.csv")
}
data_prep(a,b)
